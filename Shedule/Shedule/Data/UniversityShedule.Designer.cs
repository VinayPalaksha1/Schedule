//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UniversityShedule", "AuditoriumDepartment", "Auditorium", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Auditorium), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Department), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "LessonsTypeLessonsSubType", "LessonsType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.LessonsType), "LessonsSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.LessonsSubType), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "FacultyDepartment", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Faculty), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Department), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "EmployePosition", "Employe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Employe), "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Position))]
[assembly: EdmRelationshipAttribute("UniversityShedule", "LessonRing", "Lesson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Lesson), "Ring", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Ring), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "DepartmentRegulatoryAction", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Department), "RegulatoryAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.RegulatoryAction), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "GroupStudyType", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Group), "StudyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.StudyType), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestsPeriodGroup", "TestsPeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestsPeriod), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestsPeriodSessionType", "TestsPeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestsPeriod), "SessionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.SessionType), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "LessonRegulatoryAction", "Lesson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Lesson), "RegulatoryAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.RegulatoryAction), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "LessonAuditorium", "Lesson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Lesson), "Auditorium", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Auditorium), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TitleEmploye", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Title), "Employe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Employe), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "AcademicLoadEmploye", "AcademicLoad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.AcademicLoad), "Employe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Employe), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "AcademicLoadRegulatoryAction", "AcademicLoad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.AcademicLoad), "RegulatoryAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.RegulatoryAction), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "CurriculumRegulatoryAction", "Curriculum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Curriculum), "RegulatoryAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.RegulatoryAction), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "CurriculumSubject", "Curriculum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Curriculum), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Subject), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "CurriculumGroup", "Curriculum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Curriculum), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestCurriculumEmploye", "TestCurriculum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestCurriculum), "Employe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Employe), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestActionSubject", "TestAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestAction), "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Subject), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestActionGroup", "TestAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestAction), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestActionTestsType", "TestAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestAction), "TestsType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.TestsType), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestActionDepartment", "TestAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestAction), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Department), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "TestCurriculumTestAction", "TestCurriculum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.TestCurriculum), "TestAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.TestAction), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "FacultyGroup", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Faculty), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "FieldOfStudyGroup", "FieldOfStudy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.FieldOfStudy), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "RegulatoryActionLessonsType", "RegulatoryAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.RegulatoryAction), "LessonsType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.LessonsType), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "ValidationTestAction", "Validation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Validation), "TestAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.TestAction), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "ValidationRing", "Validation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Validation), "Ring", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Ring), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "ValidationAuditorium", "Validation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Validation), "Auditorium", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Auditorium), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "ActivityRing", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Activity), "Ring", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Ring), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "ActivityAuditorium", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Activity), "Auditorium", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Auditorium), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "EmployeFaculty", "Employe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Employe), "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Faculty), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "EduPeriodGroup", "EduPeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.EduPeriod), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Group), true)]
[assembly: EdmRelationshipAttribute("UniversityShedule", "DegreeEmploye", "Degree", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Shedule.Data.Degree), "Employe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Shedule.Data.Employe), true)]

#endregion

namespace Shedule.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UniversitySheduleContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UniversitySheduleContainer object using the connection string found in the 'UniversitySheduleContainer' section of the application configuration file.
        /// </summary>
        public UniversitySheduleContainer() : base("name=UniversitySheduleContainer", "UniversitySheduleContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversitySheduleContainer object.
        /// </summary>
        public UniversitySheduleContainer(string connectionString) : base(connectionString, "UniversitySheduleContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversitySheduleContainer object.
        /// </summary>
        public UniversitySheduleContainer(EntityConnection connection) : base(connection, "UniversitySheduleContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Auditorium> Auditoriums
        {
            get
            {
                if ((_Auditoriums == null))
                {
                    _Auditoriums = base.CreateObjectSet<Auditorium>("Auditoriums");
                }
                return _Auditoriums;
            }
        }
        private ObjectSet<Auditorium> _Auditoriums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LessonsType> LessonsTypes
        {
            get
            {
                if ((_LessonsTypes == null))
                {
                    _LessonsTypes = base.CreateObjectSet<LessonsType>("LessonsTypes");
                }
                return _LessonsTypes;
            }
        }
        private ObjectSet<LessonsType> _LessonsTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LessonsSubType> LessonsSubTypes
        {
            get
            {
                if ((_LessonsSubTypes == null))
                {
                    _LessonsSubTypes = base.CreateObjectSet<LessonsSubType>("LessonsSubTypes");
                }
                return _LessonsSubTypes;
            }
        }
        private ObjectSet<LessonsSubType> _LessonsSubTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ring> Rings
        {
            get
            {
                if ((_Rings == null))
                {
                    _Rings = base.CreateObjectSet<Ring>("Rings");
                }
                return _Rings;
            }
        }
        private ObjectSet<Ring> _Rings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employe> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employe>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employe> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Faculty> Faculties
        {
            get
            {
                if ((_Faculties == null))
                {
                    _Faculties = base.CreateObjectSet<Faculty>("Faculties");
                }
                return _Faculties;
            }
        }
        private ObjectSet<Faculty> _Faculties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestsType> TestsTypes
        {
            get
            {
                if ((_TestsTypes == null))
                {
                    _TestsTypes = base.CreateObjectSet<TestsType>("TestsTypes");
                }
                return _TestsTypes;
            }
        }
        private ObjectSet<TestsType> _TestsTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldOfStudy> FieldsOfStudy
        {
            get
            {
                if ((_FieldsOfStudy == null))
                {
                    _FieldsOfStudy = base.CreateObjectSet<FieldOfStudy>("FieldsOfStudy");
                }
                return _FieldsOfStudy;
            }
        }
        private ObjectSet<FieldOfStudy> _FieldsOfStudy;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionType> SessionTypes
        {
            get
            {
                if ((_SessionTypes == null))
                {
                    _SessionTypes = base.CreateObjectSet<SessionType>("SessionTypes");
                }
                return _SessionTypes;
            }
        }
        private ObjectSet<SessionType> _SessionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudyType> StudyTypes
        {
            get
            {
                if ((_StudyTypes == null))
                {
                    _StudyTypes = base.CreateObjectSet<StudyType>("StudyTypes");
                }
                return _StudyTypes;
            }
        }
        private ObjectSet<StudyType> _StudyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Degree> Degrees
        {
            get
            {
                if ((_Degrees == null))
                {
                    _Degrees = base.CreateObjectSet<Degree>("Degrees");
                }
                return _Degrees;
            }
        }
        private ObjectSet<Degree> _Degrees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegulatoryAction> RegulatoryActions
        {
            get
            {
                if ((_RegulatoryActions == null))
                {
                    _RegulatoryActions = base.CreateObjectSet<RegulatoryAction>("RegulatoryActions");
                }
                return _RegulatoryActions;
            }
        }
        private ObjectSet<RegulatoryAction> _RegulatoryActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EduPeriod> EduPeriods
        {
            get
            {
                if ((_EduPeriods == null))
                {
                    _EduPeriods = base.CreateObjectSet<EduPeriod>("EduPeriods");
                }
                return _EduPeriods;
            }
        }
        private ObjectSet<EduPeriod> _EduPeriods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestsPeriod> TestsPeriods
        {
            get
            {
                if ((_TestsPeriods == null))
                {
                    _TestsPeriods = base.CreateObjectSet<TestsPeriod>("TestsPeriods");
                }
                return _TestsPeriods;
            }
        }
        private ObjectSet<TestsPeriod> _TestsPeriods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lesson> Lessons
        {
            get
            {
                if ((_Lessons == null))
                {
                    _Lessons = base.CreateObjectSet<Lesson>("Lessons");
                }
                return _Lessons;
            }
        }
        private ObjectSet<Lesson> _Lessons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Validation> Validations
        {
            get
            {
                if ((_Validations == null))
                {
                    _Validations = base.CreateObjectSet<Validation>("Validations");
                }
                return _Validations;
            }
        }
        private ObjectSet<Validation> _Validations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AcademicLoad> AcademicLoadSet
        {
            get
            {
                if ((_AcademicLoadSet == null))
                {
                    _AcademicLoadSet = base.CreateObjectSet<AcademicLoad>("AcademicLoadSet");
                }
                return _AcademicLoadSet;
            }
        }
        private ObjectSet<AcademicLoad> _AcademicLoadSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Curriculum> Curriculums
        {
            get
            {
                if ((_Curriculums == null))
                {
                    _Curriculums = base.CreateObjectSet<Curriculum>("Curriculums");
                }
                return _Curriculums;
            }
        }
        private ObjectSet<Curriculum> _Curriculums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestCurriculum> TestCurriculums
        {
            get
            {
                if ((_TestCurriculums == null))
                {
                    _TestCurriculums = base.CreateObjectSet<TestCurriculum>("TestCurriculums");
                }
                return _TestCurriculums;
            }
        }
        private ObjectSet<TestCurriculum> _TestCurriculums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestAction> TestActions
        {
            get
            {
                if ((_TestActions == null))
                {
                    _TestActions = base.CreateObjectSet<TestAction>("TestActions");
                }
                return _TestActions;
            }
        }
        private ObjectSet<TestAction> _TestActions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Auditoriums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditoriums(Auditorium auditorium)
        {
            base.AddObject("Auditoriums", auditorium);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LessonsTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLessonsTypes(LessonsType lessonsType)
        {
            base.AddObject("LessonsTypes", lessonsType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LessonsSubTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLessonsSubTypes(LessonsSubType lessonsSubType)
        {
            base.AddObject("LessonsSubTypes", lessonsSubType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRings(Ring ring)
        {
            base.AddObject("Rings", ring);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employe employe)
        {
            base.AddObject("Employees", employe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Faculties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFaculties(Faculty faculty)
        {
            base.AddObject("Faculties", faculty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestsTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestsTypes(TestsType testsType)
        {
            base.AddObject("TestsTypes", testsType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldsOfStudy EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldsOfStudy(FieldOfStudy fieldOfStudy)
        {
            base.AddObject("FieldsOfStudy", fieldOfStudy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionTypes(SessionType sessionType)
        {
            base.AddObject("SessionTypes", sessionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudyTypes(StudyType studyType)
        {
            base.AddObject("StudyTypes", studyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Degrees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDegrees(Degree degree)
        {
            base.AddObject("Degrees", degree);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegulatoryActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegulatoryActions(RegulatoryAction regulatoryAction)
        {
            base.AddObject("RegulatoryActions", regulatoryAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EduPeriods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEduPeriods(EduPeriod eduPeriod)
        {
            base.AddObject("EduPeriods", eduPeriod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestsPeriods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestsPeriods(TestsPeriod testsPeriod)
        {
            base.AddObject("TestsPeriods", testsPeriod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lessons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLessons(Lesson lesson)
        {
            base.AddObject("Lessons", lesson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Validations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToValidations(Validation validation)
        {
            base.AddObject("Validations", validation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AcademicLoadSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAcademicLoadSet(AcademicLoad academicLoad)
        {
            base.AddObject("AcademicLoadSet", academicLoad);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Curriculums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurriculums(Curriculum curriculum)
        {
            base.AddObject("Curriculums", curriculum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestCurriculums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestCurriculums(TestCurriculum testCurriculum)
        {
            base.AddObject("TestCurriculums", testCurriculum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestActions(TestAction testAction)
        {
            base.AddObject("TestActions", testAction);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="AcademicLoad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AcademicLoad : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AcademicLoad object.
        /// </summary>
        /// <param name="employeId">Initial value of the EmployeId property.</param>
        /// <param name="regulatoryActionId">Initial value of the RegulatoryActionId property.</param>
        public static AcademicLoad CreateAcademicLoad(global::System.Int32 employeId, global::System.Int32 regulatoryActionId)
        {
            AcademicLoad academicLoad = new AcademicLoad();
            academicLoad.EmployeId = employeId;
            academicLoad.RegulatoryActionId = regulatoryActionId;
            return academicLoad;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeId
        {
            get
            {
                return _EmployeId;
            }
            set
            {
                if (_EmployeId != value)
                {
                    OnEmployeIdChanging(value);
                    ReportPropertyChanging("EmployeId");
                    _EmployeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeId");
                    OnEmployeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeId;
        partial void OnEmployeIdChanging(global::System.Int32 value);
        partial void OnEmployeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegulatoryActionId
        {
            get
            {
                return _RegulatoryActionId;
            }
            set
            {
                if (_RegulatoryActionId != value)
                {
                    OnRegulatoryActionIdChanging(value);
                    ReportPropertyChanging("RegulatoryActionId");
                    _RegulatoryActionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegulatoryActionId");
                    OnRegulatoryActionIdChanged();
                }
            }
        }
        private global::System.Int32 _RegulatoryActionId;
        partial void OnRegulatoryActionIdChanging(global::System.Int32 value);
        partial void OnRegulatoryActionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "AcademicLoadEmploye", "Employe")]
        public Employe Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("UniversityShedule.AcademicLoadEmploye", "Employe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("UniversityShedule.AcademicLoadEmploye", "Employe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employe> EmployeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("UniversityShedule.AcademicLoadEmploye", "Employe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employe>("UniversityShedule.AcademicLoadEmploye", "Employe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "AcademicLoadRegulatoryAction", "RegulatoryAction")]
        public RegulatoryAction RegulatoryAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.AcademicLoadRegulatoryAction", "RegulatoryAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.AcademicLoadRegulatoryAction", "RegulatoryAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegulatoryAction> RegulatoryActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.AcademicLoadRegulatoryAction", "RegulatoryAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegulatoryAction>("UniversityShedule.AcademicLoadRegulatoryAction", "RegulatoryAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="ringId">Initial value of the RingId property.</param>
        /// <param name="auditoriumId">Initial value of the AuditoriumId property.</param>
        public static Activity CreateActivity(global::System.Int32 id, global::System.String name, global::System.DateTime date, global::System.String period, global::System.Int32 ringId, global::System.Int32 auditoriumId)
        {
            Activity activity = new Activity();
            activity.Id = id;
            activity.Name = name;
            activity.Date = date;
            activity.Period = period;
            activity.RingId = ringId;
            activity.AuditoriumId = auditoriumId;
            return activity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.String _Period;
        partial void OnPeriodChanging(global::System.String value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RingId
        {
            get
            {
                return _RingId;
            }
            set
            {
                OnRingIdChanging(value);
                ReportPropertyChanging("RingId");
                _RingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RingId");
                OnRingIdChanged();
            }
        }
        private global::System.Int32 _RingId;
        partial void OnRingIdChanging(global::System.Int32 value);
        partial void OnRingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditoriumId
        {
            get
            {
                return _AuditoriumId;
            }
            set
            {
                OnAuditoriumIdChanging(value);
                ReportPropertyChanging("AuditoriumId");
                _AuditoriumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditoriumId");
                OnAuditoriumIdChanged();
            }
        }
        private global::System.Int32 _AuditoriumId;
        partial void OnAuditoriumIdChanging(global::System.Int32 value);
        partial void OnAuditoriumIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ActivityRing", "Ring")]
        public Ring Ring
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.ActivityRing", "Ring").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.ActivityRing", "Ring").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ring> RingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.ActivityRing", "Ring");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ring>("UniversityShedule.ActivityRing", "Ring", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ActivityAuditorium", "Auditorium")]
        public Auditorium Auditorium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.ActivityAuditorium", "Auditorium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.ActivityAuditorium", "Auditorium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auditorium> AuditoriumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.ActivityAuditorium", "Auditorium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auditorium>("UniversityShedule.ActivityAuditorium", "Auditorium", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Auditorium")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auditorium : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Auditorium object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="building">Initial value of the Building property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="seats">Initial value of the Seats property.</param>
        /// <param name="openingDate">Initial value of the OpeningDate property.</param>
        /// <param name="closingDate">Initial value of the ClosingDate property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        public static Auditorium CreateAuditorium(global::System.Int32 id, global::System.Int32 building, global::System.String number, global::System.Int32 seats, global::System.String openingDate, global::System.String closingDate, global::System.Int32 departmentId)
        {
            Auditorium auditorium = new Auditorium();
            auditorium.Id = id;
            auditorium.Building = building;
            auditorium.Number = number;
            auditorium.Seats = seats;
            auditorium.OpeningDate = openingDate;
            auditorium.ClosingDate = closingDate;
            auditorium.DepartmentId = departmentId;
            return auditorium;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.Int32 _Building;
        partial void OnBuildingChanging(global::System.Int32 value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private global::System.Int32 _Seats;
        partial void OnSeatsChanging(global::System.Int32 value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OpeningDate
        {
            get
            {
                return _OpeningDate;
            }
            set
            {
                OnOpeningDateChanging(value);
                ReportPropertyChanging("OpeningDate");
                _OpeningDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OpeningDate");
                OnOpeningDateChanged();
            }
        }
        private global::System.String _OpeningDate;
        partial void OnOpeningDateChanging(global::System.String value);
        partial void OnOpeningDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClosingDate
        {
            get
            {
                return _ClosingDate;
            }
            set
            {
                OnClosingDateChanging(value);
                ReportPropertyChanging("ClosingDate");
                _ClosingDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClosingDate");
                OnClosingDateChanged();
            }
        }
        private global::System.String _ClosingDate;
        partial void OnClosingDateChanging(global::System.String value);
        partial void OnClosingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "AuditoriumDepartment", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.AuditoriumDepartment", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.AuditoriumDepartment", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.AuditoriumDepartment", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("UniversityShedule.AuditoriumDepartment", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonAuditorium", "Lesson")]
        public EntityCollection<Lesson> Lesson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lesson>("UniversityShedule.LessonAuditorium", "Lesson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lesson>("UniversityShedule.LessonAuditorium", "Lesson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ValidationAuditorium", "Validation")]
        public EntityCollection<Validation> Validation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Validation>("UniversityShedule.ValidationAuditorium", "Validation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Validation>("UniversityShedule.ValidationAuditorium", "Validation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ActivityAuditorium", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("UniversityShedule.ActivityAuditorium", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("UniversityShedule.ActivityAuditorium", "Activity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Curriculum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Curriculum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Curriculum object.
        /// </summary>
        /// <param name="regulatoryActionId">Initial value of the RegulatoryActionId property.</param>
        /// <param name="subjectId">Initial value of the SubjectId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static Curriculum CreateCurriculum(global::System.Int32 regulatoryActionId, global::System.Int32 subjectId, global::System.Int32 groupId)
        {
            Curriculum curriculum = new Curriculum();
            curriculum.RegulatoryActionId = regulatoryActionId;
            curriculum.SubjectId = subjectId;
            curriculum.GroupId = groupId;
            return curriculum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegulatoryActionId
        {
            get
            {
                return _RegulatoryActionId;
            }
            set
            {
                if (_RegulatoryActionId != value)
                {
                    OnRegulatoryActionIdChanging(value);
                    ReportPropertyChanging("RegulatoryActionId");
                    _RegulatoryActionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegulatoryActionId");
                    OnRegulatoryActionIdChanged();
                }
            }
        }
        private global::System.Int32 _RegulatoryActionId;
        partial void OnRegulatoryActionIdChanging(global::System.Int32 value);
        partial void OnRegulatoryActionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                if (_SubjectId != value)
                {
                    OnSubjectIdChanging(value);
                    ReportPropertyChanging("SubjectId");
                    _SubjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubjectId");
                    OnSubjectIdChanged();
                }
            }
        }
        private global::System.Int32 _SubjectId;
        partial void OnSubjectIdChanging(global::System.Int32 value);
        partial void OnSubjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                if (_GroupId != value)
                {
                    OnGroupIdChanging(value);
                    ReportPropertyChanging("GroupId");
                    _GroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupId");
                    OnGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "CurriculumRegulatoryAction", "RegulatoryAction")]
        public RegulatoryAction RegulatoryAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.CurriculumRegulatoryAction", "RegulatoryAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.CurriculumRegulatoryAction", "RegulatoryAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegulatoryAction> RegulatoryActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.CurriculumRegulatoryAction", "RegulatoryAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegulatoryAction>("UniversityShedule.CurriculumRegulatoryAction", "RegulatoryAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "CurriculumSubject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityShedule.CurriculumSubject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityShedule.CurriculumSubject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityShedule.CurriculumSubject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("UniversityShedule.CurriculumSubject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "CurriculumGroup", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.CurriculumGroup", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.CurriculumGroup", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.CurriculumGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("UniversityShedule.CurriculumGroup", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Degree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Degree : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Degree object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Degree CreateDegree(global::System.Int32 id, global::System.String name)
        {
            Degree degree = new Degree();
            degree.Id = id;
            degree.Name = name;
            return degree;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "DegreeEmploye", "Employe")]
        public EntityCollection<Employe> Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employe>("UniversityShedule.DegreeEmploye", "Employe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employe>("UniversityShedule.DegreeEmploye", "Employe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        /// <param name="facultyId">Initial value of the FacultyId property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String name, global::System.String abbreviation, global::System.Int32 facultyId)
        {
            Department department = new Department();
            department.Id = id;
            department.Name = name;
            department.Abbreviation = abbreviation;
            department.FacultyId = facultyId;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacultyId
        {
            get
            {
                return _FacultyId;
            }
            set
            {
                OnFacultyIdChanging(value);
                ReportPropertyChanging("FacultyId");
                _FacultyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyId");
                OnFacultyIdChanged();
            }
        }
        private global::System.Int32 _FacultyId;
        partial void OnFacultyIdChanging(global::System.Int32 value);
        partial void OnFacultyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "AuditoriumDepartment", "Auditorium")]
        public EntityCollection<Auditorium> Auditorium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auditorium>("UniversityShedule.AuditoriumDepartment", "Auditorium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auditorium>("UniversityShedule.AuditoriumDepartment", "Auditorium", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "FacultyDepartment", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.FacultyDepartment", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.FacultyDepartment", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.FacultyDepartment", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("UniversityShedule.FacultyDepartment", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "DepartmentRegulatoryAction", "RegulatoryAction")]
        public EntityCollection<RegulatoryAction> RegulatoryAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegulatoryAction>("UniversityShedule.DepartmentRegulatoryAction", "RegulatoryAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegulatoryAction>("UniversityShedule.DepartmentRegulatoryAction", "RegulatoryAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionDepartment", "TestAction")]
        public EntityCollection<TestAction> TestAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestAction>("UniversityShedule.TestActionDepartment", "TestAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestAction>("UniversityShedule.TestActionDepartment", "TestAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="EduPeriod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EduPeriod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EduPeriod object.
        /// </summary>
        /// <param name="begin">Initial value of the Begin property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static EduPeriod CreateEduPeriod(global::System.DateTime begin, global::System.DateTime end, global::System.Int32 id, global::System.Int32 groupId)
        {
            EduPeriod eduPeriod = new EduPeriod();
            eduPeriod.Begin = begin;
            eduPeriod.End = end;
            eduPeriod.Id = id;
            eduPeriod.GroupId = groupId;
            return eduPeriod;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Begin
        {
            get
            {
                return _Begin;
            }
            set
            {
                OnBeginChanging(value);
                ReportPropertyChanging("Begin");
                _Begin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Begin");
                OnBeginChanged();
            }
        }
        private global::System.DateTime _Begin;
        partial void OnBeginChanging(global::System.DateTime value);
        partial void OnBeginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "EduPeriodGroup", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.EduPeriodGroup", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.EduPeriodGroup", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.EduPeriodGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("UniversityShedule.EduPeriodGroup", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Employe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employe object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="facultyId">Initial value of the FacultyId property.</param>
        /// <param name="degreeId">Initial value of the DegreeId property.</param>
        public static Employe CreateEmploye(global::System.Int32 id, global::System.String name, global::System.Int32 titleId, global::System.Int32 facultyId, global::System.Int32 degreeId)
        {
            Employe employe = new Employe();
            employe.Id = id;
            employe.Name = name;
            employe.TitleId = titleId;
            employe.FacultyId = facultyId;
            employe.DegreeId = degreeId;
            return employe;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacultyId
        {
            get
            {
                return _FacultyId;
            }
            set
            {
                OnFacultyIdChanging(value);
                ReportPropertyChanging("FacultyId");
                _FacultyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyId");
                OnFacultyIdChanged();
            }
        }
        private global::System.Int32 _FacultyId;
        partial void OnFacultyIdChanging(global::System.Int32 value);
        partial void OnFacultyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DegreeId
        {
            get
            {
                return _DegreeId;
            }
            set
            {
                OnDegreeIdChanging(value);
                ReportPropertyChanging("DegreeId");
                _DegreeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DegreeId");
                OnDegreeIdChanged();
            }
        }
        private global::System.Int32 _DegreeId;
        partial void OnDegreeIdChanging(global::System.Int32 value);
        partial void OnDegreeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "EmployePosition", "Position")]
        public EntityCollection<Position> Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Position>("UniversityShedule.EmployePosition", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Position>("UniversityShedule.EmployePosition", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TitleEmploye", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("UniversityShedule.TitleEmploye", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("UniversityShedule.TitleEmploye", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("UniversityShedule.TitleEmploye", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("UniversityShedule.TitleEmploye", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "AcademicLoadEmploye", "AcademicLoad")]
        public EntityCollection<AcademicLoad> AcademicLoad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AcademicLoad>("UniversityShedule.AcademicLoadEmploye", "AcademicLoad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AcademicLoad>("UniversityShedule.AcademicLoadEmploye", "AcademicLoad", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestCurriculumEmploye", "TestCurriculum")]
        public EntityCollection<TestCurriculum> TestCurriculum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestCurriculum>("UniversityShedule.TestCurriculumEmploye", "TestCurriculum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestCurriculum>("UniversityShedule.TestCurriculumEmploye", "TestCurriculum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "EmployeFaculty", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.EmployeFaculty", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.EmployeFaculty", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.EmployeFaculty", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("UniversityShedule.EmployeFaculty", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "DegreeEmploye", "Degree")]
        public Degree Degree
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Degree>("UniversityShedule.DegreeEmploye", "Degree").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Degree>("UniversityShedule.DegreeEmploye", "Degree").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Degree> DegreeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Degree>("UniversityShedule.DegreeEmploye", "Degree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Degree>("UniversityShedule.DegreeEmploye", "Degree", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Faculty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faculty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Faculty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        public static Faculty CreateFaculty(global::System.Int32 id, global::System.String name, global::System.String abbreviation)
        {
            Faculty faculty = new Faculty();
            faculty.Id = id;
            faculty.Name = name;
            faculty.Abbreviation = abbreviation;
            return faculty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "FacultyDepartment", "Department")]
        public EntityCollection<Department> Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("UniversityShedule.FacultyDepartment", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("UniversityShedule.FacultyDepartment", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "FacultyGroup", "Group")]
        public EntityCollection<Group> Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("UniversityShedule.FacultyGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("UniversityShedule.FacultyGroup", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "EmployeFaculty", "Employe")]
        public EntityCollection<Employe> Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employe>("UniversityShedule.EmployeFaculty", "Employe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employe>("UniversityShedule.EmployeFaculty", "Employe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="FieldOfStudy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldOfStudy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldOfStudy object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FieldOfStudy CreateFieldOfStudy(global::System.Int32 id, global::System.String name)
        {
            FieldOfStudy fieldOfStudy = new FieldOfStudy();
            fieldOfStudy.Id = id;
            fieldOfStudy.Name = name;
            return fieldOfStudy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "FieldOfStudyGroup", "Group")]
        public EntityCollection<Group> Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("UniversityShedule.FieldOfStudyGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("UniversityShedule.FieldOfStudyGroup", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupAbbreviation">Initial value of the GroupAbbreviation property.</param>
        /// <param name="cource">Initial value of the Cource property.</param>
        /// <param name="studCount">Initial value of the StudCount property.</param>
        /// <param name="specialtyAbbreviation">Initial value of the SpecialtyAbbreviation property.</param>
        /// <param name="studyTypeId">Initial value of the StudyTypeId property.</param>
        /// <param name="facultyId">Initial value of the FacultyId property.</param>
        /// <param name="fieldOfStudyId">Initial value of the FieldOfStudyId property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String groupAbbreviation, global::System.Int32 cource, global::System.Int32 studCount, global::System.String specialtyAbbreviation, global::System.Int32 studyTypeId, global::System.Int32 facultyId, global::System.Int32 fieldOfStudyId)
        {
            Group group = new Group();
            group.Id = id;
            group.GroupAbbreviation = groupAbbreviation;
            group.Cource = cource;
            group.StudCount = studCount;
            group.SpecialtyAbbreviation = specialtyAbbreviation;
            group.StudyTypeId = studyTypeId;
            group.FacultyId = facultyId;
            group.FieldOfStudyId = fieldOfStudyId;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupAbbreviation
        {
            get
            {
                return _GroupAbbreviation;
            }
            set
            {
                OnGroupAbbreviationChanging(value);
                ReportPropertyChanging("GroupAbbreviation");
                _GroupAbbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupAbbreviation");
                OnGroupAbbreviationChanged();
            }
        }
        private global::System.String _GroupAbbreviation;
        partial void OnGroupAbbreviationChanging(global::System.String value);
        partial void OnGroupAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Cource
        {
            get
            {
                return _Cource;
            }
            set
            {
                OnCourceChanging(value);
                ReportPropertyChanging("Cource");
                _Cource = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cource");
                OnCourceChanged();
            }
        }
        private global::System.Int32 _Cource;
        partial void OnCourceChanging(global::System.Int32 value);
        partial void OnCourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudCount
        {
            get
            {
                return _StudCount;
            }
            set
            {
                OnStudCountChanging(value);
                ReportPropertyChanging("StudCount");
                _StudCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudCount");
                OnStudCountChanged();
            }
        }
        private global::System.Int32 _StudCount;
        partial void OnStudCountChanging(global::System.Int32 value);
        partial void OnStudCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecialtyAbbreviation
        {
            get
            {
                return _SpecialtyAbbreviation;
            }
            set
            {
                OnSpecialtyAbbreviationChanging(value);
                ReportPropertyChanging("SpecialtyAbbreviation");
                _SpecialtyAbbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecialtyAbbreviation");
                OnSpecialtyAbbreviationChanged();
            }
        }
        private global::System.String _SpecialtyAbbreviation;
        partial void OnSpecialtyAbbreviationChanging(global::System.String value);
        partial void OnSpecialtyAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudyTypeId
        {
            get
            {
                return _StudyTypeId;
            }
            set
            {
                OnStudyTypeIdChanging(value);
                ReportPropertyChanging("StudyTypeId");
                _StudyTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyTypeId");
                OnStudyTypeIdChanged();
            }
        }
        private global::System.Int32 _StudyTypeId;
        partial void OnStudyTypeIdChanging(global::System.Int32 value);
        partial void OnStudyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FacultyId
        {
            get
            {
                return _FacultyId;
            }
            set
            {
                OnFacultyIdChanging(value);
                ReportPropertyChanging("FacultyId");
                _FacultyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyId");
                OnFacultyIdChanged();
            }
        }
        private global::System.Int32 _FacultyId;
        partial void OnFacultyIdChanging(global::System.Int32 value);
        partial void OnFacultyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldOfStudyId
        {
            get
            {
                return _FieldOfStudyId;
            }
            set
            {
                OnFieldOfStudyIdChanging(value);
                ReportPropertyChanging("FieldOfStudyId");
                _FieldOfStudyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FieldOfStudyId");
                OnFieldOfStudyIdChanged();
            }
        }
        private global::System.Int32 _FieldOfStudyId;
        partial void OnFieldOfStudyIdChanging(global::System.Int32 value);
        partial void OnFieldOfStudyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "GroupStudyType", "StudyType")]
        public StudyType StudyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StudyType>("UniversityShedule.GroupStudyType", "StudyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StudyType>("UniversityShedule.GroupStudyType", "StudyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StudyType> StudyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StudyType>("UniversityShedule.GroupStudyType", "StudyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StudyType>("UniversityShedule.GroupStudyType", "StudyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestsPeriodGroup", "TestsPeriod")]
        public EntityCollection<TestsPeriod> TestsPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestsPeriod>("UniversityShedule.TestsPeriodGroup", "TestsPeriod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestsPeriod>("UniversityShedule.TestsPeriodGroup", "TestsPeriod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "CurriculumGroup", "Curriculum")]
        public EntityCollection<Curriculum> Curriculum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Curriculum>("UniversityShedule.CurriculumGroup", "Curriculum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Curriculum>("UniversityShedule.CurriculumGroup", "Curriculum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionGroup", "TestAction")]
        public EntityCollection<TestAction> TestAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestAction>("UniversityShedule.TestActionGroup", "TestAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestAction>("UniversityShedule.TestActionGroup", "TestAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "FacultyGroup", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.FacultyGroup", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.FacultyGroup", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("UniversityShedule.FacultyGroup", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("UniversityShedule.FacultyGroup", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "FieldOfStudyGroup", "FieldOfStudy")]
        public FieldOfStudy FieldOfStudy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOfStudy>("UniversityShedule.FieldOfStudyGroup", "FieldOfStudy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOfStudy>("UniversityShedule.FieldOfStudyGroup", "FieldOfStudy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldOfStudy> FieldOfStudyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldOfStudy>("UniversityShedule.FieldOfStudyGroup", "FieldOfStudy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldOfStudy>("UniversityShedule.FieldOfStudyGroup", "FieldOfStudy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "EduPeriodGroup", "EduPeriod")]
        public EntityCollection<EduPeriod> EduPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EduPeriod>("UniversityShedule.EduPeriodGroup", "EduPeriod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EduPeriod>("UniversityShedule.EduPeriodGroup", "EduPeriod", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Lesson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lesson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lesson object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="period">Initial value of the Period property.</param>
        /// <param name="ringId">Initial value of the RingId property.</param>
        /// <param name="regulatoryActionId">Initial value of the RegulatoryActionId property.</param>
        /// <param name="auditoriumId">Initial value of the AuditoriumId property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        public static Lesson CreateLesson(global::System.Int32 id, global::System.DateTime date, global::System.Boolean period, global::System.Int32 ringId, global::System.Int32 regulatoryActionId, global::System.Int32 auditoriumId, global::System.Int32 day)
        {
            Lesson lesson = new Lesson();
            lesson.Id = id;
            lesson.Date = date;
            lesson.Period = period;
            lesson.RingId = ringId;
            lesson.RegulatoryActionId = regulatoryActionId;
            lesson.AuditoriumId = auditoriumId;
            lesson.Day = day;
            return lesson;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Period
        {
            get
            {
                return _Period;
            }
            set
            {
                OnPeriodChanging(value);
                ReportPropertyChanging("Period");
                _Period = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Period");
                OnPeriodChanged();
            }
        }
        private global::System.Boolean _Period;
        partial void OnPeriodChanging(global::System.Boolean value);
        partial void OnPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RingId
        {
            get
            {
                return _RingId;
            }
            set
            {
                OnRingIdChanging(value);
                ReportPropertyChanging("RingId");
                _RingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RingId");
                OnRingIdChanged();
            }
        }
        private global::System.Int32 _RingId;
        partial void OnRingIdChanging(global::System.Int32 value);
        partial void OnRingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegulatoryActionId
        {
            get
            {
                return _RegulatoryActionId;
            }
            set
            {
                OnRegulatoryActionIdChanging(value);
                ReportPropertyChanging("RegulatoryActionId");
                _RegulatoryActionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegulatoryActionId");
                OnRegulatoryActionIdChanged();
            }
        }
        private global::System.Int32 _RegulatoryActionId;
        partial void OnRegulatoryActionIdChanging(global::System.Int32 value);
        partial void OnRegulatoryActionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditoriumId
        {
            get
            {
                return _AuditoriumId;
            }
            set
            {
                OnAuditoriumIdChanging(value);
                ReportPropertyChanging("AuditoriumId");
                _AuditoriumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditoriumId");
                OnAuditoriumIdChanged();
            }
        }
        private global::System.Int32 _AuditoriumId;
        partial void OnAuditoriumIdChanging(global::System.Int32 value);
        partial void OnAuditoriumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int32 _Day;
        partial void OnDayChanging(global::System.Int32 value);
        partial void OnDayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonRing", "Ring")]
        public Ring Ring
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.LessonRing", "Ring").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.LessonRing", "Ring").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ring> RingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.LessonRing", "Ring");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ring>("UniversityShedule.LessonRing", "Ring", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonRegulatoryAction", "RegulatoryAction")]
        public RegulatoryAction RegulatoryAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.LessonRegulatoryAction", "RegulatoryAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.LessonRegulatoryAction", "RegulatoryAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegulatoryAction> RegulatoryActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegulatoryAction>("UniversityShedule.LessonRegulatoryAction", "RegulatoryAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegulatoryAction>("UniversityShedule.LessonRegulatoryAction", "RegulatoryAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonAuditorium", "Auditorium")]
        public Auditorium Auditorium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.LessonAuditorium", "Auditorium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.LessonAuditorium", "Auditorium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auditorium> AuditoriumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.LessonAuditorium", "Auditorium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auditorium>("UniversityShedule.LessonAuditorium", "Auditorium", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="LessonsSubType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LessonsSubType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LessonsSubType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lessonsTypeId">Initial value of the LessonsTypeId property.</param>
        public static LessonsSubType CreateLessonsSubType(global::System.Int32 id, global::System.String name, global::System.Int32 lessonsTypeId)
        {
            LessonsSubType lessonsSubType = new LessonsSubType();
            lessonsSubType.Id = id;
            lessonsSubType.Name = name;
            lessonsSubType.LessonsTypeId = lessonsTypeId;
            return lessonsSubType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LessonsTypeId
        {
            get
            {
                return _LessonsTypeId;
            }
            set
            {
                OnLessonsTypeIdChanging(value);
                ReportPropertyChanging("LessonsTypeId");
                _LessonsTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LessonsTypeId");
                OnLessonsTypeIdChanged();
            }
        }
        private global::System.Int32 _LessonsTypeId;
        partial void OnLessonsTypeIdChanging(global::System.Int32 value);
        partial void OnLessonsTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonsTypeLessonsSubType", "LessonsType")]
        public LessonsType LessonsType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LessonsType>("UniversityShedule.LessonsTypeLessonsSubType", "LessonsType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LessonsType>("UniversityShedule.LessonsTypeLessonsSubType", "LessonsType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LessonsType> LessonsTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LessonsType>("UniversityShedule.LessonsTypeLessonsSubType", "LessonsType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LessonsType>("UniversityShedule.LessonsTypeLessonsSubType", "LessonsType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="LessonsType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LessonsType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LessonsType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LessonsType CreateLessonsType(global::System.Int32 id, global::System.String name)
        {
            LessonsType lessonsType = new LessonsType();
            lessonsType.Id = id;
            lessonsType.Name = name;
            return lessonsType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonsTypeLessonsSubType", "LessonsSubType")]
        public EntityCollection<LessonsSubType> LessonsSubType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LessonsSubType>("UniversityShedule.LessonsTypeLessonsSubType", "LessonsSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LessonsSubType>("UniversityShedule.LessonsTypeLessonsSubType", "LessonsSubType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "RegulatoryActionLessonsType", "RegulatoryAction")]
        public EntityCollection<RegulatoryAction> RegulatoryAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegulatoryAction>("UniversityShedule.RegulatoryActionLessonsType", "RegulatoryAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegulatoryAction>("UniversityShedule.RegulatoryActionLessonsType", "RegulatoryAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Position CreatePosition(global::System.Int32 id, global::System.String name)
        {
            Position position = new Position();
            position.Id = id;
            position.Name = name;
            return position;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "EmployePosition", "Employe")]
        public EntityCollection<Employe> Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employe>("UniversityShedule.EmployePosition", "Employe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employe>("UniversityShedule.EmployePosition", "Employe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="RegulatoryAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegulatoryAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegulatoryAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="hours">Initial value of the Hours property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="lessonsTypeId">Initial value of the LessonsTypeId property.</param>
        public static RegulatoryAction CreateRegulatoryAction(global::System.Int32 id, global::System.Int32 hours, global::System.Int32 departmentId, global::System.Int32 lessonsTypeId)
        {
            RegulatoryAction regulatoryAction = new RegulatoryAction();
            regulatoryAction.Id = id;
            regulatoryAction.Hours = hours;
            regulatoryAction.DepartmentId = departmentId;
            regulatoryAction.LessonsTypeId = lessonsTypeId;
            return regulatoryAction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hours
        {
            get
            {
                return _Hours;
            }
            set
            {
                OnHoursChanging(value);
                ReportPropertyChanging("Hours");
                _Hours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hours");
                OnHoursChanged();
            }
        }
        private global::System.Int32 _Hours;
        partial void OnHoursChanging(global::System.Int32 value);
        partial void OnHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LessonsTypeId
        {
            get
            {
                return _LessonsTypeId;
            }
            set
            {
                OnLessonsTypeIdChanging(value);
                ReportPropertyChanging("LessonsTypeId");
                _LessonsTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LessonsTypeId");
                OnLessonsTypeIdChanged();
            }
        }
        private global::System.Int32 _LessonsTypeId;
        partial void OnLessonsTypeIdChanging(global::System.Int32 value);
        partial void OnLessonsTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "DepartmentRegulatoryAction", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.DepartmentRegulatoryAction", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.DepartmentRegulatoryAction", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.DepartmentRegulatoryAction", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("UniversityShedule.DepartmentRegulatoryAction", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonRegulatoryAction", "Lesson")]
        public EntityCollection<Lesson> Lesson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lesson>("UniversityShedule.LessonRegulatoryAction", "Lesson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lesson>("UniversityShedule.LessonRegulatoryAction", "Lesson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "AcademicLoadRegulatoryAction", "AcademicLoad")]
        public EntityCollection<AcademicLoad> AcademicLoad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AcademicLoad>("UniversityShedule.AcademicLoadRegulatoryAction", "AcademicLoad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AcademicLoad>("UniversityShedule.AcademicLoadRegulatoryAction", "AcademicLoad", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "CurriculumRegulatoryAction", "Curriculum")]
        public EntityCollection<Curriculum> Curriculum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Curriculum>("UniversityShedule.CurriculumRegulatoryAction", "Curriculum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Curriculum>("UniversityShedule.CurriculumRegulatoryAction", "Curriculum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "RegulatoryActionLessonsType", "LessonsType")]
        public LessonsType LessonsType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LessonsType>("UniversityShedule.RegulatoryActionLessonsType", "LessonsType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LessonsType>("UniversityShedule.RegulatoryActionLessonsType", "LessonsType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LessonsType> LessonsTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LessonsType>("UniversityShedule.RegulatoryActionLessonsType", "LessonsType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LessonsType>("UniversityShedule.RegulatoryActionLessonsType", "LessonsType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Ring")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ring : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ring object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="begin">Initial value of the Begin property.</param>
        /// <param name="end">Initial value of the End property.</param>
        public static Ring CreateRing(global::System.Int32 id, global::System.String begin, global::System.String end)
        {
            Ring ring = new Ring();
            ring.Id = id;
            ring.Begin = begin;
            ring.End = end;
            return ring;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Begin
        {
            get
            {
                return _Begin;
            }
            set
            {
                OnBeginChanging(value);
                ReportPropertyChanging("Begin");
                _Begin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Begin");
                OnBeginChanged();
            }
        }
        private global::System.String _Begin;
        partial void OnBeginChanging(global::System.String value);
        partial void OnBeginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.String _End;
        partial void OnEndChanging(global::System.String value);
        partial void OnEndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "LessonRing", "Lesson")]
        public EntityCollection<Lesson> Lesson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lesson>("UniversityShedule.LessonRing", "Lesson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lesson>("UniversityShedule.LessonRing", "Lesson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ValidationRing", "Validation")]
        public EntityCollection<Validation> Validation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Validation>("UniversityShedule.ValidationRing", "Validation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Validation>("UniversityShedule.ValidationRing", "Validation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ActivityRing", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("UniversityShedule.ActivityRing", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("UniversityShedule.ActivityRing", "Activity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="SessionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SessionType CreateSessionType(global::System.Int32 id, global::System.String name)
        {
            SessionType sessionType = new SessionType();
            sessionType.Id = id;
            sessionType.Name = name;
            return sessionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestsPeriodSessionType", "TestsPeriod")]
        public EntityCollection<TestsPeriod> TestsPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestsPeriod>("UniversityShedule.TestsPeriodSessionType", "TestsPeriod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestsPeriod>("UniversityShedule.TestsPeriodSessionType", "TestsPeriod", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="StudyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudyType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static StudyType CreateStudyType(global::System.Int32 id, global::System.String name)
        {
            StudyType studyType = new StudyType();
            studyType.Id = id;
            studyType.Name = name;
            return studyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "GroupStudyType", "Group")]
        public EntityCollection<Group> Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("UniversityShedule.GroupStudyType", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("UniversityShedule.GroupStudyType", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        public static Subject CreateSubject(global::System.Int32 id, global::System.String name, global::System.String abbreviation)
        {
            Subject subject = new Subject();
            subject.Id = id;
            subject.Name = name;
            subject.Abbreviation = abbreviation;
            return subject;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "CurriculumSubject", "Curriculum")]
        public EntityCollection<Curriculum> Curriculum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Curriculum>("UniversityShedule.CurriculumSubject", "Curriculum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Curriculum>("UniversityShedule.CurriculumSubject", "Curriculum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionSubject", "TestAction")]
        public EntityCollection<TestAction> TestAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestAction>("UniversityShedule.TestActionSubject", "TestAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestAction>("UniversityShedule.TestActionSubject", "TestAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="TestAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="subjectId">Initial value of the SubjectId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="testsTypeId">Initial value of the TestsTypeId property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        public static TestAction CreateTestAction(global::System.Int32 id, global::System.Int32 subjectId, global::System.Int32 groupId, global::System.Int32 testsTypeId, global::System.Int32 departmentId)
        {
            TestAction testAction = new TestAction();
            testAction.Id = id;
            testAction.SubjectId = subjectId;
            testAction.GroupId = groupId;
            testAction.TestsTypeId = testsTypeId;
            testAction.DepartmentId = departmentId;
            return testAction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                OnSubjectIdChanging(value);
                ReportPropertyChanging("SubjectId");
                _SubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectId");
                OnSubjectIdChanged();
            }
        }
        private global::System.Int32 _SubjectId;
        partial void OnSubjectIdChanging(global::System.Int32 value);
        partial void OnSubjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestsTypeId
        {
            get
            {
                return _TestsTypeId;
            }
            set
            {
                OnTestsTypeIdChanging(value);
                ReportPropertyChanging("TestsTypeId");
                _TestsTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestsTypeId");
                OnTestsTypeIdChanged();
            }
        }
        private global::System.Int32 _TestsTypeId;
        partial void OnTestsTypeIdChanging(global::System.Int32 value);
        partial void OnTestsTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionSubject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityShedule.TestActionSubject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityShedule.TestActionSubject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("UniversityShedule.TestActionSubject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("UniversityShedule.TestActionSubject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionGroup", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.TestActionGroup", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.TestActionGroup", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.TestActionGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("UniversityShedule.TestActionGroup", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionTestsType", "TestsType")]
        public TestsType TestsType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestsType>("UniversityShedule.TestActionTestsType", "TestsType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestsType>("UniversityShedule.TestActionTestsType", "TestsType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestsType> TestsTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestsType>("UniversityShedule.TestActionTestsType", "TestsType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestsType>("UniversityShedule.TestActionTestsType", "TestsType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionDepartment", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.TestActionDepartment", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.TestActionDepartment", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("UniversityShedule.TestActionDepartment", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("UniversityShedule.TestActionDepartment", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestCurriculumTestAction", "TestCurriculum")]
        public EntityCollection<TestCurriculum> TestCurriculum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestCurriculum>("UniversityShedule.TestCurriculumTestAction", "TestCurriculum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestCurriculum>("UniversityShedule.TestCurriculumTestAction", "TestCurriculum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ValidationTestAction", "Validation")]
        public EntityCollection<Validation> Validation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Validation>("UniversityShedule.ValidationTestAction", "Validation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Validation>("UniversityShedule.ValidationTestAction", "Validation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="TestCurriculum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestCurriculum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestCurriculum object.
        /// </summary>
        /// <param name="employeId">Initial value of the EmployeId property.</param>
        /// <param name="testActionId">Initial value of the TestActionId property.</param>
        public static TestCurriculum CreateTestCurriculum(global::System.Int32 employeId, global::System.Int32 testActionId)
        {
            TestCurriculum testCurriculum = new TestCurriculum();
            testCurriculum.EmployeId = employeId;
            testCurriculum.TestActionId = testActionId;
            return testCurriculum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeId
        {
            get
            {
                return _EmployeId;
            }
            set
            {
                if (_EmployeId != value)
                {
                    OnEmployeIdChanging(value);
                    ReportPropertyChanging("EmployeId");
                    _EmployeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeId");
                    OnEmployeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeId;
        partial void OnEmployeIdChanging(global::System.Int32 value);
        partial void OnEmployeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestActionId
        {
            get
            {
                return _TestActionId;
            }
            set
            {
                if (_TestActionId != value)
                {
                    OnTestActionIdChanging(value);
                    ReportPropertyChanging("TestActionId");
                    _TestActionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestActionId");
                    OnTestActionIdChanged();
                }
            }
        }
        private global::System.Int32 _TestActionId;
        partial void OnTestActionIdChanging(global::System.Int32 value);
        partial void OnTestActionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestCurriculumEmploye", "Employe")]
        public Employe Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("UniversityShedule.TestCurriculumEmploye", "Employe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("UniversityShedule.TestCurriculumEmploye", "Employe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employe> EmployeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employe>("UniversityShedule.TestCurriculumEmploye", "Employe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employe>("UniversityShedule.TestCurriculumEmploye", "Employe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestCurriculumTestAction", "TestAction")]
        public TestAction TestAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestAction>("UniversityShedule.TestCurriculumTestAction", "TestAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestAction>("UniversityShedule.TestCurriculumTestAction", "TestAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestAction> TestActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestAction>("UniversityShedule.TestCurriculumTestAction", "TestAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestAction>("UniversityShedule.TestCurriculumTestAction", "TestAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="TestsPeriod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestsPeriod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestsPeriod object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="begin">Initial value of the Begin property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="sessionTypeId">Initial value of the SessionTypeId property.</param>
        public static TestsPeriod CreateTestsPeriod(global::System.Int32 id, global::System.String begin, global::System.String end, global::System.Int32 groupId, global::System.Int32 sessionTypeId)
        {
            TestsPeriod testsPeriod = new TestsPeriod();
            testsPeriod.Id = id;
            testsPeriod.Begin = begin;
            testsPeriod.End = end;
            testsPeriod.GroupId = groupId;
            testsPeriod.SessionTypeId = sessionTypeId;
            return testsPeriod;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Begin
        {
            get
            {
                return _Begin;
            }
            set
            {
                OnBeginChanging(value);
                ReportPropertyChanging("Begin");
                _Begin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Begin");
                OnBeginChanged();
            }
        }
        private global::System.String _Begin;
        partial void OnBeginChanging(global::System.String value);
        partial void OnBeginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.String _End;
        partial void OnEndChanging(global::System.String value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionTypeId
        {
            get
            {
                return _SessionTypeId;
            }
            set
            {
                OnSessionTypeIdChanging(value);
                ReportPropertyChanging("SessionTypeId");
                _SessionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionTypeId");
                OnSessionTypeIdChanged();
            }
        }
        private global::System.Int32 _SessionTypeId;
        partial void OnSessionTypeIdChanging(global::System.Int32 value);
        partial void OnSessionTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestsPeriodGroup", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.TestsPeriodGroup", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.TestsPeriodGroup", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("UniversityShedule.TestsPeriodGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("UniversityShedule.TestsPeriodGroup", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestsPeriodSessionType", "SessionType")]
        public SessionType SessionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionType>("UniversityShedule.TestsPeriodSessionType", "SessionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionType>("UniversityShedule.TestsPeriodSessionType", "SessionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SessionType> SessionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionType>("UniversityShedule.TestsPeriodSessionType", "SessionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SessionType>("UniversityShedule.TestsPeriodSessionType", "SessionType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="TestsType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestsType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestsType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TestsType CreateTestsType(global::System.Int32 id, global::System.String name)
        {
            TestsType testsType = new TestsType();
            testsType.Id = id;
            testsType.Name = name;
            return testsType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TestActionTestsType", "TestAction")]
        public EntityCollection<TestAction> TestAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestAction>("UniversityShedule.TestActionTestsType", "TestAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestAction>("UniversityShedule.TestActionTestsType", "TestAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Title CreateTitle(global::System.Int32 id, global::System.String name)
        {
            Title title = new Title();
            title.Id = id;
            title.Name = name;
            return title;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "TitleEmploye", "Employe")]
        public EntityCollection<Employe> Employe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employe>("UniversityShedule.TitleEmploye", "Employe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employe>("UniversityShedule.TitleEmploye", "Employe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityShedule", Name="Validation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Validation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Validation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="testActionId">Initial value of the TestActionId property.</param>
        /// <param name="ringId">Initial value of the RingId property.</param>
        /// <param name="auditoriumId">Initial value of the AuditoriumId property.</param>
        public static Validation CreateValidation(global::System.Int32 id, global::System.String date, global::System.Int32 testActionId, global::System.Int32 ringId, global::System.Int32 auditoriumId)
        {
            Validation validation = new Validation();
            validation.Id = id;
            validation.Date = date;
            validation.TestActionId = testActionId;
            validation.RingId = ringId;
            validation.AuditoriumId = auditoriumId;
            return validation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestActionId
        {
            get
            {
                return _TestActionId;
            }
            set
            {
                OnTestActionIdChanging(value);
                ReportPropertyChanging("TestActionId");
                _TestActionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestActionId");
                OnTestActionIdChanged();
            }
        }
        private global::System.Int32 _TestActionId;
        partial void OnTestActionIdChanging(global::System.Int32 value);
        partial void OnTestActionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RingId
        {
            get
            {
                return _RingId;
            }
            set
            {
                OnRingIdChanging(value);
                ReportPropertyChanging("RingId");
                _RingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RingId");
                OnRingIdChanged();
            }
        }
        private global::System.Int32 _RingId;
        partial void OnRingIdChanging(global::System.Int32 value);
        partial void OnRingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditoriumId
        {
            get
            {
                return _AuditoriumId;
            }
            set
            {
                OnAuditoriumIdChanging(value);
                ReportPropertyChanging("AuditoriumId");
                _AuditoriumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditoriumId");
                OnAuditoriumIdChanged();
            }
        }
        private global::System.Int32 _AuditoriumId;
        partial void OnAuditoriumIdChanging(global::System.Int32 value);
        partial void OnAuditoriumIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ValidationTestAction", "TestAction")]
        public TestAction TestAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestAction>("UniversityShedule.ValidationTestAction", "TestAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestAction>("UniversityShedule.ValidationTestAction", "TestAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestAction> TestActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestAction>("UniversityShedule.ValidationTestAction", "TestAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestAction>("UniversityShedule.ValidationTestAction", "TestAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ValidationRing", "Ring")]
        public Ring Ring
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.ValidationRing", "Ring").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.ValidationRing", "Ring").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ring> RingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ring>("UniversityShedule.ValidationRing", "Ring");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ring>("UniversityShedule.ValidationRing", "Ring", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityShedule", "ValidationAuditorium", "Auditorium")]
        public Auditorium Auditorium
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.ValidationAuditorium", "Auditorium").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.ValidationAuditorium", "Auditorium").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auditorium> AuditoriumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auditorium>("UniversityShedule.ValidationAuditorium", "Auditorium");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auditorium>("UniversityShedule.ValidationAuditorium", "Auditorium", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
